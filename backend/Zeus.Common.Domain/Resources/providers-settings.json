{
  "Discord": {
    "Name": "Discord",
    "IconUri": "https://cdn.prod.website-files.com/6257adef93867e50d84d30e2/653714c1f22aef3b6921d63d_636e0a6ca814282eca7172c6_icon_clyde_white_RGB.svg",
    "Color": "#5865F2",
    "Triggers": {
      "MessageReceivedInChannel": {
        "Name": "Message received in channel",
        "Description": "Triggers when a message is received in a specific guild channel.",
        "Icon": "inbox-arrow-down",
        "Parameters": {
          "GuildId": {
            "Name": "Guild id",
            "Description": "The ID of the guild to monitor.",
            "Type": "string"
          },
          "ChannelId": {
            "Name": "Channel id",
            "Description": "The ID of the channel to monitor.",
            "Type": "string"
          }
        },
        "Facts": {
          "MessageId": {
            "Name": "Message id",
            "Description": "The ID of the received message.",
            "Type": "string"
          },
          "Content": {
            "Name": "Message content",
            "Description": "The content of the received message.",
            "Type": "string"
          },
          "SenderId": {
            "Name": "Sender id",
            "Description": "The ID of the sender of the message.",
            "Type": "string"
          },
          "SenderUsername": {
            "Name": "Sender username",
            "Description": "The username of the sender of the message.",
            "Type": "string"
          },
          "ReceptionTime": {
            "Name": "Reception time",
            "Description": "The time when the message was received.",
            "Type": "datetime"
          }
        },
        "Dependencies": {
          "Discord": {
            "Require": "single"
          }
        }
      }
    },
    "Actions": {
      "SendMessageToChannel": {
        "Name": "Send message to channel",
        "Description": "Sends a message to a specific guild channel as triggo bot.",
        "Icon": "chat-bubble-oval-left-ellipsis",
        "Parameters": {
          "GuildId": {
            "Name": "Guild id",
            "Description": "The ID of the guild to send the message to.",
            "Type": "string"
          },
          "ChannelId": {
            "Name": "Channel id",
            "Description": "The ID of the channel to send the message to.",
            "Type": "string"
          },
          "Content": {
            "Name": "Message content",
            "Description": "The content of the message to send.",
            "Type": "string"
          }
        },
        "Facts": {
          "MessageId": {
            "Name": "Message id",
            "Description": "The ID of the sent message.",
            "Type": "string"
          }
        },
        "Dependencies": {
          "Discord": {
            "Require": "single"
          }
        }
      },
      "SendEmbedToChannel": {
        "Name": "Send embed to channel",
        "Description": "Sends a embed to a specific guild channel as triggo bot.",
        "Icon": "bookmark-square",
        "Parameters": {
          "GuildId": {
            "Name": "Guild id",
            "Description": "The ID of the guild to send the message to.",
            "Type": "string"
          },
          "ChannelId": {
            "Name": "Channel id",
            "Description": "The ID of the channel to send the message to.",
            "Type": "string"
          },
          "Title": {
            "Name": "Embed title",
            "Description": "The title of the embed.",
            "Type": "string"
          },
          "Description": {
            "Name": "Embed description",
            "Description": "The description of the embed.",
            "Type": "string"
          },
          "Color": {
            "Name": "Embed color",
            "Description": "The color of the embed.",
            "Type": "integer"
          },
          "ImageUrl": {
            "Name": "Image url",
            "Description": "The URL of the image to display in the embed.",
            "Type": "string"
          }
        },
        "Facts": {
          "MessageId": {
            "Name": "Message id",
            "Description": "The ID of the sent message.",
            "Type": "string"
          }
        },
        "Dependencies": {
          "Discord": {
            "Require": "single"
          }
        }
      },
      "SendEmbedFromJsonToChannel": {
        "Name": "Send embed from json to channel",
        "Description": "Sends a embed from json to a specific guild channel as triggo bot.",
        "Icon": "bars-arrow-down",
        "Parameters": {
          "GuildId": {
            "Name": "Guild id",
            "Description": "The ID of the guild to send the message to.",
            "Type": "string"
          },
          "ChannelId": {
            "Name": "Channel id",
            "Description": "The ID of the channel to send the message to.",
            "Type": "string"
          },
          "Json": {
            "Name": "Json content",
            "Description": "The json that represents the embed.",
            "Type": "string"
          }
        },
        "Facts": {
          "MessageId": {
            "Name": "Message id",
            "Description": "The ID of the sent message.",
            "Type": "string"
          }
        },
        "Dependencies": {
          "Discord": {
            "Require": "single"
          }
        }
      }
    }
  },
  "Notion": {
    "Name": "Notion",
    "IconUri": "https://www.svgrepo.com/show/361558/notion-logo.svg",
    "Color": "#373530",
    "Triggers": {
      "DatabaseCreated": {
        "Name": "Database created",
        "Description": "Trigger when a new database is created in any page.",
        "Icon": "circle-stack",
        "Parameters": {},
        "Facts": {
          "Id": {
            "Name": "Database id",
            "Description": "The ID of the created database.",
            "Type": "string"
          },
          "Title": {
            "Name": "Database title",
            "Description": "The title of the created database.",
            "Type": "string"
          },
          "Description": {
            "Name": "Database description",
            "Description": "The description of the created database.",
            "Type": "string"
          },
          "Icon": {
            "Name": "Database icon",
            "Description": "The icon of the created database (can be url or emoji).",
            "Type": "string"
          },
          "ParentId": {
            "Name": "Parent id",
            "Description": "The ID of the parent page of the created database (page id).",
            "Type": "string"
          }
        },
        "Dependencies": {
          "Notion": {
            "Require": "multiple"
          }
        }
      },
      "PageCreated": {
        "Name": "Page created",
        "Description": "Trigger when a new page is created in any database.",
        "Icon": "document",
        "Parameters": {},
        "Facts": {
          "Id": {
            "Name": "Page id",
            "Description": "The ID of the created page.",
            "Type": "string"
          },
          "Title": {
            "Name": "Page title",
            "Description": "The title of the created page.",
            "Type": "string"
          },
          "Description": {
            "Name": "Page description",
            "Description": "The description of the created page.",
            "Type": "string"
          },
          "Icon": {
            "Name": "Page icon",
            "Description": "The icon of the created page (can be url or emoji).",
            "Type": "string"
          },
          "ParentId": {
            "Name": "Parent id",
            "Description": "The ID of the parent database of the created page (database or  id).",
            "Type": "string"
          }
        },
        "Dependencies": {
          "Notion": {
            "Require": "multiple"
          }
        }
      },
      "DatabaseRowCreated": {
        "Name": "Database row created",
        "Description": "Trigger when a new row is created in specific database.",
        "Icon": "arrow-right-end-on-rectangle",
        "Parameters": {
          "DatabaseId": {
            "Name": "Database id",
            "Description": "The ID of the database to monitor.",
            "Type": "string"
          }
        },
        "Facts": {
          "Id": {
            "Name": "Row id",
            "Description": "The ID of the created row.",
            "Type": "string"
          },
          "Title": {
            "Name": "Row title",
            "Description": "The title of the created row.",
            "Type": "string"
          },
          "Type": {
            "Name": "Row type",
            "Description": "The type of the created row (page or database).",
            "Type": "string"
          },
          "Description": {
            "Name": "Row description",
            "Description": "The description of the created row.",
            "Type": "string"
          },
          "Icon": {
            "Name": "Row icon",
            "Description": "The icon of the created row (can be url or emoji).",
            "Type": "string"
          },
          "ParentId": {
            "Name": "Parent id",
            "Description": "The ID of the parent database of the created row (database id).",
            "Type": "string"
          }
        },
        "Dependencies": {
          "Notion": {
            "Require": "single"
          }
        }
      },
      "DatabaseRowDeleted": {
        "Name": "Database row deleted",
        "Description": "Trigger when a row is deleted in specific database.",
        "Icon": "arrow-right-end-on-rectangle",
        "Parameters": {
          "DatabaseId": {
            "Name": "Database id",
            "Description": "The ID of the database to monitor.",
            "Type": "string"
          }
        },
        "Facts": {
          "Id": {
            "Name": "Row id",
            "Description": "The ID of the deleted row.",
            "Type": "string"
          },
          "Title": {
            "Name": "Row title",
            "Description": "The title of the deleted row.",
            "Type": "string"
          },
          "Type": {
            "Name": "Row type",
            "Description": "The type of the deleted row (page or database).",
            "Type": "string"
          },
          "Description": {
            "Name": "Row description",
            "Description": "The description of the deleted row.",
            "Type": "string"
          },
          "Icon": {
            "Name": "Row icon",
            "Description": "The icon of the deleted row (can be url or emoji).",
            "Type": "string"
          },
          "ParentId": {
            "Name": "Parent id",
            "Description": "The ID of the parent database of the deleted row (database id).",
            "Type": "string"
          }
        },
        "Dependencies": {
          "Notion": {
            "Require": "single"
          }
        }
      }
    },
    "Actions": {
      "CreateDatabase": {
        "Name": "Create database",
        "Description": "Creates a new database in a specific page.",
        "Icon": "plus-circle",
        "Parameters": {
          "ParentId": {
            "Name": "Parent id",
            "Description": "The ID of the parent page to create the database in.",
            "Type": "string"
          },
          "Title": {
            "Name": "Database title",
            "Description": "The title of the database to create.",
            "Type": "string"
          },
          "Icon": {
            "Name": "Database icon",
            "Description": "The icon of the database to create (can be url or emoji).",
            "Type": "string"
          }
        },
        "Facts": {
          "Id": {
            "Name": "Database id",
            "Description": "The ID of the created database.",
            "Type": "string"
          }
        },
        "Dependencies": {
          "Notion": {
            "Require": "single"
          }
        }
      },
      "CreatePage": {
        "Name": "Create page",
        "Description": "Creates a new page.",
        "Icon": "plus-circle",
        "Parameters": {
          "ParentId": {
            "Name": "Parent id",
            "Description": "The ID of the parent page where you want to create the page.",
            "Type": "string"
          },
          "Title": {
            "Name": "Page title",
            "Description": "The title of the page to create.",
            "Type": "string"
          },
          "Icon": {
            "Name": "Page icon",
            "Description": "The icon of the page to create (can be url or emoji).",
            "Type": "string"
          }
        },
        "Facts": {
          "Id": {
            "Name": "Page id",
            "Description": "The ID of the created page.",
            "Type": "string"
          }
        },
        "Dependencies": {
          "Notion": {
            "Require": "single"
          }
        }
      },
      "CreateDatabaseRow": {
        "Name": "Create database row",
        "Description": "Creates a new row in a specific database.",
        "Icon": "plus-circle",
        "Parameters": {
          "DatabaseId": {
            "Name": "Database id",
            "Description": "The ID of the database to create the row in.",
            "Type": "string"
          },
          "TitleParamName": {
            "Name": "Title parameter name",
            "Description": "The name of the parameter where the title of the row is displayed",
            "Type": "string"
          },
          "Title": {
            "Name": "Row title",
            "Description": "The title of the row to create.",
            "Type": "string"
          },
          "Type": {
            "Name": "Row type",
            "Description": "The type of the row to create (page or database).",
            "Type": "string"
          },
          "Icon": {
            "Name": "Row icon",
            "Description": "The icon of the row to create (can be url or emoji).",
            "Type": "string"
          }
        },
        "Facts": {
          "Id": {
            "Name": "Row id",
            "Description": "The ID of the created row.",
            "Type": "string"
          }
        },
        "Dependencies": {
          "Notion": {
            "Require": "single"
          }
        }
      },
      "ArchiveDatabase": {
        "Name": "Archive database",
        "Description": "Archives a database.",
        "Icon": "archive-box",
        "Parameters": {
          "DatabaseId": {
            "Name": "Database id",
            "Description": "The ID of the database to archive.",
            "Type": "string"
          }
        },
        "Facts": {},
        "Dependencies": {
          "Notion": {
            "Require": "single"
          }
        }
      },
      "ArchivePage": {
        "Name": "Archive page",
        "Description": "Archives a page.",
        "Icon": "archive-box",
        "Parameters": {
          "PageId": {
            "Name": "Page id",
            "Description": "The ID of the page to archive.",
            "Type": "string"
          }
        },
        "Facts": {},
        "Dependencies": {
          "Notion": {
            "Require": "single"
          }
        }
      }
    }
  },
  "OpenAi": {
    "Name": "OpenAi",
    "IconUri": "https://www.svgrepo.com/show/306500/openai.svg",
    "Color": "#74AA9C",
    "Triggers": {},
    "Actions": {
      "CreateCompletion": {
        "Name": "Create completion",
        "Description": "Creates a completion using the OpenAI models.",
        "Icon": "chat-bubble-left-ellipsis",
        "Parameters": {
          "Model": {
            "Name": "Model",
            "Description": "The model to use for the completion.",
            "Type": "string"
          },
          "Context": {
            "Name": "Context",
            "Description": "The context to generate the completion from.",
            "Type": "string"
          },
          "Prompt": {
            "Name": "Prompt",
            "Description": "The prompt to generate the completion from.",
            "Type": "string"
          }
        },
        "Facts": {
          "Completion": {
            "Name": "Completion",
            "Description": "The generated completion.",
            "Type": "string"
          }
        },
        "Dependencies": {
          "OpenAi": {
            "Require": "single"
          }
        }
      }
    }
  },
  "LeagueOfLegends": {
    "Name": "League of Legends",
    "IconUri": "https://wiki.leagueoflegends.com/en-us/images/League_of_Legends_icon.svg",
    "Color": "#C89B3C",
    "Triggers": {
      "MatchFinished": {
        "Name": "Match finished",
        "Description": "Trigger when a match is finished.",
        "Icon": "flag",
        "Parameters": {},
        "Facts": {
          "MatchId": {
            "Name": "Match id",
            "Description": "The ID of the finished match.",
            "Type": "string"
          },
          "MatchType": {
            "Name": "Match type",
            "Description": "The type of the finished match.",
            "Type": "string"
          },
          "MatchDuration": {
            "Name": "Match duration",
            "Description": "The duration of the finished match.",
            "Type": "float"
          },
          "MatchWon": {
            "Name": "Match won",
            "Description": "Boolean value indicating if the match was won.",
            "Type": "boolean"
          },
          "SummonerKda": {
            "Name": "Summoner KDA",
            "Description": "The KDA of the summoner in the match.",
            "Type": "string"
          },
          "SummonerChampion": {
            "Name": "Summoner champion",
            "Description": "The champion played by the summoner in the match.",
            "Type": "string"
          }
        },
        "Dependencies": {
          "LeagueOfLegends": {
            "Require": "multiple"
          }
        }
      },
      "MatchFinishedWithKdaLowerThan": {
        "Name": "Match finished with KDA lower than",
        "Description": "Trigger when a match is finished with a KDA lower than a specified value.",
        "Icon": "arrow-down-right",
        "Parameters": {
          "KdaThreshold": {
            "Name": "KDA threshold",
            "Description": "The KDA threshold to trigger the action.",
            "Type": "float"
          }
        },
        "Facts": {
          "MatchId": {
            "Name": "Match id",
            "Description": "The ID of the finished match.",
            "Type": "string"
          },
          "MatchType": {
            "Name": "Match type",
            "Description": "The type of the finished match.",
            "Type": "string"
          },
          "MatchDuration": {
            "Name": "Match duration",
            "Description": "The duration of the finished match.",
            "Type": "float"
          },
          "MatchWon": {
            "Name": "Match won",
            "Description": "Boolean value indicating if the match was won.",
            "Type": "boolean"
          },
          "SummonerKda": {
            "Name": "Summoner KDA",
            "Description": "The KDA of the summoner in the match.",
            "Type": "string"
          },
          "SummonerChampion": {
            "Name": "Summoner champion",
            "Description": "The champion played by the summoner in the match.",
            "Type": "string"
          }
        },
        "Dependencies": {
          "LeagueOfLegends": {
            "Require": "multiple"
          }
        }
      },
      "MatchFinishedWithKdaUpperThan": {
        "Name": "Match finished with KDA upper than",
        "Description": "Trigger when a match is finished with a KDA upper than a specified value.",
        "Icon": "arrow-up-right",
        "Parameters": {
          "KdaThreshold": {
            "Name": "KDA threshold",
            "Description": "The KDA threshold to trigger the action.",
            "Type": "float"
          }
        },
        "Facts": {
          "MatchId": {
            "Name": "Match id",
            "Description": "The ID of the finished match.",
            "Type": "string"
          },
          "MatchType": {
            "Name": "Match type",
            "Description": "The type of the finished match.",
            "Type": "string"
          },
          "MatchDuration": {
            "Name": "Match duration",
            "Description": "The duration of the finished match.",
            "Type": "float"
          },
          "MatchWon": {
            "Name": "Match won",
            "Description": "Boolean value indicating if the match was won.",
            "Type": "boolean"
          },
          "SummonerKda": {
            "Name": "Summoner KDA",
            "Description": "The KDA of the summoner in the match.",
            "Type": "string"
          },
          "SummonerChampion": {
            "Name": "Summoner champion",
            "Description": "The champion played by the summoner in the match.",
            "Type": "string"
          }
        },
        "Dependencies": {
          "LeagueOfLegends": {
            "Require": "multiple"
          }
        }
      }
    },
    "Actions": {}
  },
  "Github": {
    "Name": "Github",
    "IconUri": "https://upload.wikimedia.org/wikipedia/commons/9/91/Octicons-mark-github.svg",
    "Color": "#24292E",
    "Triggers": {
      "PullRequestCreated": {
        "Name": "Pull request created",
        "Description": "Trigger when a pull request is created.",
        "Icon": "folder-arrow-down",
        "Parameters": {
          "Owner": {
            "Name": "Owner",
            "Description": "The owner of the repo. Can be user or organization.",
            "Type": "string"
          },
          "Repository": {
            "Name": "Repository",
            "Description": "The repository to monitor.",
            "Type": "string"
          }
        },
        "Facts": {
          "Url": {
            "Name": "Pull request url",
            "Description": "The URL of the created pull request.",
            "Type": "string"
          },
          "Title": {
            "Name": "Pull request title",
            "Description": "The title of the created pull request.",
            "Type": "string"
          },
          "Number": {
            "Name": "Pull request number",
            "Description": "The number of the created pull request.",
            "Type": "integer"
          },
          "Body": {
            "Name": "Pull request body",
            "Description": "The body of the created pull request.",
            "Type": "string"
          },
          "AuthorName": {
            "Name": "Author name",
            "Description": "The name of the author of the pull request.",
            "Type": "string"
          }
        },
        "Dependencies": {
          "Github": {
            "Require": "single"
          }
        }
      },
      "PullRequestClosed": {
        "Name": "Pull request closed",
        "Description": "Trigger when a pull request is closed.",
        "Icon": "folder-minus",
        "Parameters": {
          "Owner": {
            "Name": "Owner",
            "Description": "The owner of the repo. Can be user or organization.",
            "Type": "string"
          },
          "Repository": {
            "Name": "Repository",
            "Description": "The repository to monitor.",
            "Type": "string"
          }
        },
        "Facts": {
          "Url": {
            "Name": "Pull request url",
            "Description": "The URL of the created pull request.",
            "Type": "string"
          },
          "Title": {
            "Name": "Pull request title",
            "Description": "The title of the created pull request.",
            "Type": "string"
          },
          "Number": {
            "Name": "Pull request number",
            "Description": "The number of the created pull request.",
            "Type": "integer"
          },
          "Body": {
            "Name": "Pull request body",
            "Description": "The body of the created pull request.",
            "Type": "string"
          },
          "AuthorName": {
            "Name": "Author name",
            "Description": "The name of the author of the pull request.",
            "Type": "string"
          }
        },
        "Dependencies": {
          "Github": {
            "Require": "single"
          }
        }
      },
      "IssueCreated": {
        "Name": "Issue created",
        "Description": "Trigger when an issue is created.",
        "Icon": "arrow-down-circle",
        "Parameters": {
          "Owner": {
            "Name": "Owner",
            "Description": "The owner of the repo. Can be user or organization.",
            "Type": "string"
          },
          "Repository": {
            "Name": "Repository",
            "Description": "The repository to monitor.",
            "Type": "string"
          }
        },
        "Facts": {
          "Url": {
            "Name": "Issue url",
            "Description": "The URL of the created issue.",
            "Type": "string"
          },
          "Title": {
            "Name": "Issue title",
            "Description": "The title of the created issue.",
            "Type": "string"
          },
          "Number": {
            "Name": "Issue number",
            "Description": "The number of the created issue.",
            "Type": "integer"
          },
          "Body": {
            "Name": "Issue body",
            "Description": "The body of the created issue.",
            "Type": "string"
          },
          "AuthorName": {
            "Name": "Author name",
            "Description": "The name of the author of the issue.",
            "Type": "string"
          }
        },
        "Dependencies": {
          "Github": {
            "Require": "single"
          }
        }
      },
      "IssueDeleted": {
        "Name": "Issue deleted",
        "Description": "Trigger when an issue is deleted.",
        "Icon": "minus-circle",
        "Parameters": {
          "Owner": {
            "Name": "Owner",
            "Description": "The owner of the repo. Can be user or organization.",
            "Type": "string"
          },
          "Repository": {
            "Name": "Repository",
            "Description": "The repository to monitor.",
            "Type": "string"
          }
        },
        "Facts": {
          "Url": {
            "Name": "Issue url",
            "Description": "The URL of the created issue.",
            "Type": "string"
          },
          "Title": {
            "Name": "Issue title",
            "Description": "The title of the created issue.",
            "Type": "string"
          },
          "Number": {
            "Name": "Issue number",
            "Description": "The number of the created issue.",
            "Type": "integer"
          },
          "Body": {
            "Name": "Issue body",
            "Description": "The body of the created issue.",
            "Type": "string"
          },
          "AuthorName": {
            "Name": "Author name",
            "Description": "The name of the author of the issue.",
            "Type": "string"
          }
        },
        "Dependencies": {
          "Github": {
            "Require": "single"
          }
        }
      }
    },
    "Actions": {
      "CreatePullRequest": {
        "Name": "Create pull request",
        "Description": "Creates a new pull request.",
        "Icon": "folder-plus",
        "Parameters": {
          "Owner": {
            "Name": "Owner",
            "Description": "The owner of the repo. Can be user or organization.",
            "Type": "string"
          },
          "Repository": {
            "Name": "Repository",
            "Description": "The repository to create the pull request in.",
            "Type": "string"
          },
          "Title": {
            "Name": "Pull request title",
            "Description": "The title of the pull request.",
            "Type": "string"
          },
          "Body": {
            "Name": "Pull request body",
            "Description": "The body of the pull request.",
            "Type": "string"
          },
          "Head": {
            "Name": "Head",
            "Description": "The branch where the changes are implemented.",
            "Type": "string"
          },
          "Base": {
            "Name": "Base",
            "Description": "The branch where the changes should be merged.",
            "Type": "string"
          },
          "Draft": {
            "Name": "Draft",
            "Description": "Boolean value indicating if the pull request is a draft.",
            "Type": "boolean"
          }
        },
        "Facts": {
          "Url": {
            "Name": "Pull request url",
            "Description": "The URL of the created pull request.",
            "Type": "string"
          },
          "Title": {
            "Name": "Pull request title",
            "Description": "The title of the created pull request.",
            "Type": "string"
          },
          "Number": {
            "Name": "Pull request number",
            "Description": "The number of the created pull request.",
            "Type": "integer"
          },
          "Body": {
            "Name": "Pull request body",
            "Description": "The body of the created pull request.",
            "Type": "string"
          },
          "AuthorName": {
            "Name": "Author name",
            "Description": "The name of the author of the pull request.",
            "Type": "string"
          }
        },
        "Dependencies": {
          "Github": {
            "Require": "single"
          }
        }
      },
      "ClosePullRequest": {
        "Name": "Close pull request",
        "Description": "Closes a pull request.",
        "Icon": "archive-box-x-mark",
        "Parameters": {
          "Owner": {
            "Name": "Owner",
            "Description": "The owner of the repo. Can be user or organization.",
            "Type": "string"
          },
          "Repository": {
            "Name": "Repository",
            "Description": "The repository to close the pull request in.",
            "Type": "string"
          },
          "Number": {
            "Name": "Pull request number",
            "Description": "The number of the pull request to close.",
            "Type": "integer"
          }
        },
        "Facts": {},
        "Dependencies": {
          "Github": {
            "Require": "single"
          }
        }
      },
      "MergePullRequest": {
        "Name": "Merge pull request",
        "Description": "Merges a pull request.",
        "Icon": "arrow-down-tray",
        "Parameters": {
          "Owner": {
            "Name": "Owner",
            "Description": "The owner of the repo. Can be user or organization.",
            "Type": "string"
          },
          "Repository": {
            "Name": "Repository",
            "Description": "The repository to merge the pull request in.",
            "Type": "string"
          },
          "Number": {
            "Name": "Pull request number",
            "Description": "The number of the pull request to merge.",
            "Type": "integer"
          },
          "CommitTitle": {
            "Name": "Commit title",
            "Description": "The title of the commit message.",
            "Type": "string"
          },
          "CommitMessage": {
            "Name": "Commit message",
            "Description": "The message of the commit.",
            "Type": "string"
          },
          "MergeMethod": {
            "Name": "Merge method",
            "Description": "The method to use for merging the pull request (merge, squash or rebase).",
            "Type": "string"
          }
        },
        "Facts": {},
        "Dependencies": {
          "Github": {
            "Require": "single"
          }
        }
      }
    }
  }
}
