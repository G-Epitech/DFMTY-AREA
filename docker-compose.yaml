services:
  zeus-db:
    image: postgres:16-alpine
    container_name: zeus-db
    restart: always
    env_file:
      - .env
    ports:
      - "35432:5432"
    volumes:
      - zeus-db-data:/var/lib/postgresql/data
        - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - zeus-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 5

  zeus-api-migrations:
    container_name: zeus-api-migrations
    restart: "no"
    build:
      context: backend/
      dockerfile: Zeus.Api.Migrations/Dockerfile
    env_file:
      - .env
    networks:
      - zeus-network
    depends_on:
      zeus-db:
        condition: service_healthy

  zeus-message-broker:
    container_name: zeus-message-broker
    restart: always
    image: rabbitmq:4-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - .env
    networks:
      - zeus-network
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "node_health_check" ]
      interval: 5s
      timeout: 5s
      retries: 5

  zeus-api-web:
    container_name: zeus-api-web
    restart: always
    build:
      context: backend/
      dockerfile: Zeus.Api.Presentation.Web/Dockerfile
    env_file:
      - .env
    ports:
      - "8080:8080"
    networks:
      - zeus-network
    depends_on:
      zeus-api-migrations:
        condition: service_completed_successfully
      zeus-message-broker:
        condition: service_healthy

  zeus-api-grpc:
    container_name: zeus-api-grpc
    restart: always
    build:
      context: backend/
      dockerfile: Zeus.Api.Presentation.gRPC/Dockerfile
    env_file:
      - .env
    networks:
      - zeus-network
    depends_on:
      zeus-api-migrations:
        condition: service_completed_successfully
      zeus-message-broker:
        condition: service_healthy

  zeus-daemon-runner:
    container_name: zeus-daemon-runner
    restart: always
    build:
      context: backend/
      dockerfile: Zeus.Daemon.Runner/Dockerfile
    env_file:
      - .env
    networks:
      - zeus-network
    depends_on:
      - zeus-api-grpc
      - zeus-message-broker

volumes:
  zeus-db-data:
    name: zeus-db-data
  shared_volume:
    name: shared_volume

networks:
  zeus-network:
    name: zeus-network
    driver: bridge
